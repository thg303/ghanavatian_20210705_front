import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'
import { getVideos } from '../../api/videos'

const initialState = {
  state: 'idle',
  list: []
}

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.
export const loadVideosAsync = createAsyncThunk(
  'video/fetchVideos',
  async () => {
    return await getVideos()
  }
)

export const videoSlice = createSlice({
  name: 'video',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(loadVideosAsync.pending, (state) => {
        state.status = 'loading'
      })
      .addCase(loadVideosAsync.fulfilled, (state, action) => {
        state.status = 'idle'
        state.list = action.payload
      })
  }
})

export const selectVideos = (state) => state.video.list
export const selectStatus = (state) => state.video.status

export default videoSlice.reducer
